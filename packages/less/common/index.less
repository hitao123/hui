// 清除浮动
.clearfix {
  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

//
.multi-ellipsis {
  display: box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: 2;
  line-clamp: 2; /* stylelint-disable-line */
  box-orient: vertical; /* stylelint-disable-line */
}
//
.ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.color(@name, @color) when (isColor(@color)) {
  @{name}: @color;
}

.border-radius(@name, @radius) {
  @{name}: @radius;
}

.set-border-by-width(@name, @width) when not(@width = 0) {
  @{name}: 1px;
}

.border-width (@reg, @width, @borderStyle) when (mod(@reg , 10) = 1) {
  .set-border-by-width(border-left-width, @width);
  border-left-style: @borderStyle;
}

.border-width (@reg, @width, @borderStyle) when (mod(@reg , 100) >= 10) {
  .set-border-by-width(border-bottom-width, @width);
  border-bottom-style: @borderStyle;
}

.border-width (@reg, @width, @borderStyle) when (mod(@reg , 1000) >= 100) {
  .set-border-by-width(border-right-width, @width);
  border-right-style: @borderStyle;
}

.border-width (@reg, @width, @borderStyle) when (@reg >= 1000) {
  .set-border-by-width(border-top-width, @width);
  border-top-style: @borderStyle;
}

.border-handle(@border-width: 1111, @borderColor: #DDD, @borderStyle: solid, @radius: 0px) {
  & { /* stylelint-disable-line */
    position: relative;
  }
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 99;
    box-sizing: border-box;
    width: 200%;
    height: 200%;
    pointer-events: none;
    content: "";
    border: 0;
    transform: scale(.5);
    transform-origin: 0 0;
  }
  &::before { /* stylelint-disable-line */
    .border-width(@border-width, @borderColor, @borderStyle);
    .color(border-color, @borderColor);
    .border-radius(border-radius, @radius);
  }
}
